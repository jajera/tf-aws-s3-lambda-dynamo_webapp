{"version":3,"sources":["DCTLogoSilver3D.png","serviceWorker.ts","components/NotFound.tsx","config.ts","api/items-api.ts","components/Items.tsx","App.tsx","routing.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","NotFound","_React$PureComponent","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","React","apiEndpoint","getItems","_getItems","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","console","log","Axios","get","concat","headers","Content-Type","sent","data","abrupt","map","item","itemId","S","name","price","t0","error","stop","createItem","_x","_createItem","_callee2","newItem","_context2","put","JSON","stringify","Access-Control-Allow-Origin","deleteItem","_x4","_deleteItem","_callee4","_context4","delete","Items","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","state","items","newItemItemId","newItemName","newItemPrice","loadingItems","handleItemIdChange","event","setState","target","handleNameChange","handlePriceChange","onItemCreate","alert","onItemDelete","_ref2","_componentDidMount","_callee3","_context3","message","Header","as","renderCreateItemInput","renderItems","Grid","Row","Column","width","Input","fluid","actionPosition","placeholder","onChange","Button","color","content","icon","onClick","Divider","renderLoading","renderItemsList","Loader","indeterminate","active","inline","_this2","padded","verticalAlign","floated","pos","Icon","App","_Component","props","createElement","Container","Segment","style","padding","vertical","container","stackable","Image","src","logo","alt","size","centered","Router","history","generateMenu","generateCurrentPage","Menu","Item","Link","to","Switch","Route","path","exact","render","component","Component","createHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93a80779.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DCTLogoSilver3D.91384bea.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react'\n\ninterface NotFoundProps {\n}\n\ninterface NotFoundState {\n}\n\nexport class NotFound extends React.PureComponent<NotFoundProps, NotFoundState> {\n  render() {\n    return <h1>Nothing on Dashboard. Please click Items link above.</h1>\n  }\n}\n","export const apiEndpoint = 'https://9igq1h35gc.execute-api.ap-southeast-2.amazonaws.com/prod'\n","import { apiEndpoint } from '../config'\nimport { Item } from '../types/Item';\nimport { CreateItemRequest } from '../types/CreateItemRequest';\nimport Axios from 'axios'\nimport { UpdateItemRequest } from '../types/UpdateItemRequest';\n\nexport async function getItems(): Promise<Item[]> {\n  console.log('Fetching items');\n\n  try {\n    const response = await Axios.get(`${apiEndpoint}/items`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    console.log('Items:', response.data);\n\n    return response.data.map((item: any) => ({\n      itemId: item.itemId.S,\n      name: item.name.S,\n      price: item.price.S\n    }));\n  } catch (error) {\n    console.error('Error fetching items:', error);\n    throw error;\n  }\n}\n\nexport async function createItem(\n  newItem: CreateItemRequest\n): Promise<Item> {\n  console.log(\"Creating item with data:\", newItem);\n  const response = await Axios.put(`${apiEndpoint}/items`,  JSON.stringify(newItem), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    }\n  })\n  return response.data.item\n}\n\nexport async function patchItem(\n  itemId: string,\n  updatedItem: UpdateItemRequest\n): Promise<void> {\n  await Axios.patch(`${apiEndpoint}/items/${itemId}`, JSON.stringify(updatedItem), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    }\n  })\n}\n\nexport async function deleteItem(\n  itemId: string\n): Promise<void> {\n  await Axios.delete(`${apiEndpoint}/items/${itemId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    }\n  })\n}\n","import dateFormat from 'dateformat'\nimport { History } from 'history'\nimport update from 'immutability-helper'\nimport * as React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Image,\n  Loader\n} from 'semantic-ui-react'\n\nimport { createItem, deleteItem, getItems, patchItem } from '../api/items-api'\nimport { Item } from '../types/Item'\n\ninterface ItemsProps {\n  history: History\n}\n\ninterface ItemsState {\n  items: Item[]\n  newItemItemId: string\n  newItemName: string\n  newItemPrice: string\n  loadingItems: boolean\n}\n\nexport class Items extends React.PureComponent<ItemsProps, ItemsState> {\n  state: ItemsState = {\n    items: [],\n    newItemItemId: '',\n    newItemName: '',\n    newItemPrice: '',\n    loadingItems: true\n  }\n\n  handleItemIdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newItemItemId: event.target.value })\n  }\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newItemName: event.target.value })\n  }\n\n  handlePriceChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newItemPrice: event.target.value })\n  }\n\n  onItemCreate = async () => {\n    try {\n      const newItem = await createItem( {\n        itemId: this.state.newItemItemId,\n        name: this.state.newItemName,\n        price: this.state.newItemPrice\n      })\n      const items = await getItems()\n      this.setState({\n        items,\n        loadingItems: false\n      })\n    } catch {\n      alert('Item creation failed')\n    }\n  }\n\n  onItemDelete = async (itemId: string) => {\n    try {\n      await deleteItem(itemId)\n      const items = await getItems()\n      this.setState({\n        items,\n        loadingItems: false\n      })\n    } catch {\n      alert('Item deletion failed')\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const items = await getItems()\n      this.setState({\n        items,\n        loadingItems: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch items: ${e.message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n          <Header as=\"h1\">ITEMs</Header>\n\n          {this.renderCreateItemInput()}\n\n          {this.renderItems()}\n      </div>\n    )\n  }\n\n  renderCreateItemInput() {\n    return (\n      <Grid.Row>\n        <Grid.Column width={8}>\n\n          <Input\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"Item Id...\"\n            onChange={this.handleItemIdChange}\n          />\n\n          <Input\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"Item name...\"\n            onChange={this.handleNameChange}\n          />\n\n          <Input\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"Item price - like $10.00 ...\"\n            onChange={this.handlePriceChange}\n          />\n\n          <Button\n            color=\"teal\"\n            content=\"Add New Item\"\n            icon=\"add\"\n            onClick={this.onItemCreate}\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Divider />\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n\n  renderItems() {\n    if (this.state.loadingItems) {\n      return this.renderLoading()\n    }\n\n    return this.renderItemsList()\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading ITEMs\n        </Loader>\n      </Grid.Row>\n    )\n  }\n\n  renderItemsList() {\n    return (\n      <Grid padded>\n        <Grid.Row key={0}>\n          <Grid.Column width={3} verticalAlign=\"middle\">\n            Item Id\n          </Grid.Column>\n          <Grid.Column width={5} verticalAlign=\"middle\">\n            Name\n          </Grid.Column>\n          <Grid.Column width={4} floated=\"right\">\n            Price\n          </Grid.Column>\n          <Grid.Column width={1} floated=\"right\">\n          </Grid.Column>\n          <Grid.Column width={16}>\n            <Divider />\n          </Grid.Column>\n        </Grid.Row>\n        {this.state.items && this.state.items.map((item, pos) => {\n          return (\n            <Grid.Row key={item.itemId}>\n              <Grid.Column width={3} verticalAlign=\"middle\">\n                {item.itemId}\n              </Grid.Column>\n              <Grid.Column width={5} verticalAlign=\"middle\">\n                {item.name}\n              </Grid.Column>\n              <Grid.Column width={4} floated=\"right\">\n                {item.price}\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"red\"\n                  onClick={() => this.onItemDelete(item.itemId)}\n                >\n                  <Icon name=\"delete\" />\n                </Button>\n              </Grid.Column>\n              <Grid.Column width={16}>\n                <Divider />\n              </Grid.Column>\n            </Grid.Row>\n          )\n        })}\n      </Grid>\n    )\n  }\n\n}\n","import React, { Component } from 'react'\nimport { Link, Route, Router, Switch } from 'react-router-dom'\nimport { Container, Grid, Menu, Segment, Image } from 'semantic-ui-react'\n\nimport { NotFound } from './components/NotFound'\nimport { Items } from './components/Items'\n\nimport logo from './DCTLogoSilver3D.png';\n\nexport interface AppProps {}\n\nexport interface AppProps {\n  history: any\n}\n\nexport interface AppState {}\n\nexport default class App extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <Container>\n        {/* Heads up! We apply there some custom styling, you usually will not need it. */}\n        <style>\n          {`\n          html, body {\n            background-color: #003163 !important;\n            color: #fff !important;\n          }\n          h1.ui.header {\n            color: #fff !important;\n          }\n          p > span {\n            opacity: 0.4;\n            text-align: center;\n          }\n        }\n        `}\n        </style>\n        <Segment style={{ padding: '2em 0em' }} vertical>\n          <Grid container stackable verticalAlign=\"middle\">\n            <Grid.Row>\n              <Image src={logo} alt='Logo' size='medium' verticalAlign='middle' centered />\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={16}>\n                <Router history={this.props.history}>\n                  {this.generateMenu()}\n\n                  {this.generateCurrentPage()}\n                </Router>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </Container>\n    )\n  }\n\n  generateMenu() {\n    return (\n      <Menu>\n        <Menu.Item name=\"items\">\n          <Link to=\"/\">Items</Link>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n\n  generateCurrentPage() {\n\n    return (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => {\n            return <Items {...props} />\n          }}\n        />\n\n        <Route component={NotFound} />\n      </Switch>\n    )\n  }\n}\n","import React from 'react'\nimport { Router, Route } from 'react-router-dom'\nimport createHistory from 'history/createBrowserHistory'\nimport App from './App';\nconst history = createHistory()\n\n\nexport const makeRouting = () => {\n  return (\n    <Router history={history}>\n      <div>\n        <Route\n          render={props => {\n            return <App {...props} />\n          }}\n        />\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport 'semantic-ui-css/semantic.min.css'\nimport { makeRouting } from './routing';\n\nReactDOM.render(makeRouting(), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}